// Generated by CoffeeScript 1.3.3
(function() {
  var IPv4, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  IPv4 = {
    is_valid: function(addr) {
      var V4;
      V4 = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;
      return addr.match(V4) !== null;
    },
    convert: function(addr) {
      var hex, num, octet, _i, _len, _results;
      addr = addr.split(".");
      if (addr.length !== 4) {
        return;
      }
      _results = [];
      for (_i = 0, _len = addr.length; _i < _len; _i++) {
        octet = addr[_i];
        num = parseInt(octet, 10);
        hex = num.toString(16);
        if (hex.length < 2) {
          _results.push("0" + hex);
        } else {
          _results.push(hex);
        }
      }
      return _results;
    }
  };

  $("#ip").keyup(function(event) {
    var addr;
    addr = event.target.value.replace(' ', '');
    if (!IPv4.is_valid(addr)) {
      $(".result").html("");
      $(".result-text").hide();
    } else {
      $(".result").html(IPv4.convert(addr).join(""));
      $(".result-text").show();
    }
    return event.preventDefault();
  });

  $("form").submit(function(event) {
    event.preventDefault();
    return $(".modal").modal("hide");
  });

  $(".modal").on('shown', function() {
    return $(".modal input").focus();
  });

}).call(this);
